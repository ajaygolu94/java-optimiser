<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>uk.co.xcordis</groupId>
	<artifactId>optimiser</artifactId>
	<packaging>war</packaging>
	<name>optimiser</name>
	<version>1.0</version>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>1.5.9.RELEASE</version>
	</parent>

	<properties>
		<java.version>1.8</java.version>
		<oltu.version>1.0.0</oltu.version>
		<cassandra-version>3.1.0</cassandra-version>
		<quartz.job.version>2.2.1</quartz.job.version>
		<testng.version>6.10</testng.version>
		<easy.rules.version>3.0.0</easy.rules.version>
		<!-- Sonar Configuration -->
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<sonar.host.url>http://localhost:9000</sonar.host.url>
		<project></project>
	</properties>

	<dependencies>

		<!-- Web -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
			<exclusions>
				<exclusion>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-starter-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<!-- Log4j2 -->
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-api</artifactId>
			<version>2.8.1</version><!--$NO-MVN-MAN-VER$ -->
		</dependency>
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-core</artifactId>
			<version>2.8.1</version><!--$NO-MVN-MAN-VER$ -->
		</dependency>
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-1.2-api</artifactId>
			<version>2.8.1</version><!--$NO-MVN-MAN-VER$ -->
		</dependency>
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-jcl</artifactId>
			<version>2.8.1</version><!--$NO-MVN-MAN-VER$ -->
		</dependency>
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-slf4j-impl</artifactId>
			<version>2.8.1</version><!--$NO-MVN-MAN-VER$ -->
		</dependency>

		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-nosql</artifactId>
			<version>2.8.1</version><!--$NO-MVN-MAN-VER$ -->
		</dependency>

		<!-- Only for Development environment -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<optional>true</optional>
		</dependency>

		<!-- Web with Tomcat + Embed -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-tomcat</artifactId>
			<scope>provided</scope>
		</dependency>

		<!-- Quartz scheduler -->
		<dependency>
			<groupId>org.quartz-scheduler</groupId>
			<artifactId>quartz</artifactId>
			<version>${quartz.job.version}</version>
		</dependency>
		
		<!-- JSTL -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>jstl</artifactId>
		</dependency>

		<!-- Need this to compile JSP, Servlet -->
		<dependency>
			<groupId>org.apache.tomcat.embed</groupId>
			<artifactId>tomcat-embed-jasper</artifactId>
			<exclusions>
				<exclusion>
					<groupId>org.eclipse.jdt</groupId>
					<artifactId>ecj</artifactId>
				</exclusion>
			</exclusions>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<scope>provided</scope>
		</dependency>

		<!-- Need this to compile JSP -->
		<dependency>
			<groupId>org.eclipse.jdt.core.compiler</groupId>
			<artifactId>ecj</artifactId>
			<version>4.6.1</version>
			<scope>provided</scope>
		</dependency>

		<!-- Optional, for bootstrap -->
		<dependency>
			<groupId>org.webjars</groupId>
			<artifactId>bootstrap</artifactId>
			<version>3.3.7</version>
		</dependency>

		<!-- org.jUnit Testing -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>

		<!-- Testng -->
		<dependency>
			<groupId>org.testng</groupId>
			<artifactId>testng</artifactId>
			<version>${testng.version}</version>
			<scope>test</scope>
		</dependency>

		<!-- OAuth 2.0 -->
		<dependency>
			<groupId>org.apache.oltu.oauth2</groupId>
			<artifactId>org.apache.oltu.oauth2.common</artifactId>
			<version>${oltu.version}</version>
		</dependency>

		<dependency>
			<groupId>org.apache.oltu.oauth2</groupId>
			<artifactId>org.apache.oltu.oauth2.client</artifactId>
			<version>${oltu.version}</version>
		</dependency>

		<dependency>
			<groupId>org.apache.oltu.oauth2</groupId>
			<artifactId>org.apache.oltu.oauth2.authzserver</artifactId>
			<version>${oltu.version}</version>
		</dependency>

		<dependency>
			<groupId>org.apache.oltu.oauth2</groupId>
			<artifactId>org.apache.oltu.oauth2.httpclient4</artifactId>
			<version>${oltu.version}</version>
		</dependency>

		<dependency>
			<groupId>org.apache.oltu.oauth2</groupId>
			<artifactId>org.apache.oltu.oauth2.resourceserver</artifactId>
			<version>${oltu.version}</version>
		</dependency>

		<dependency>
			<groupId>org.apache.oltu.oauth2</groupId>
			<artifactId>org.apache.oltu.oauth2.dynamicreg.client</artifactId>
			<version>${oltu.version}</version>
		</dependency>

		<dependency>
			<groupId>org.apache.oltu.oauth2</groupId>
			<artifactId>org.apache.oltu.oauth2.dynamicreg.server</artifactId>
			<version>${oltu.version}</version>
		</dependency>

		<!-- Cassandra Jar Start -->
		<dependency>
			<groupId>com.datastax.cassandra</groupId>
			<artifactId>cassandra-driver-core</artifactId>
			<version>${cassandra-version}</version><!--$NO-MVN-MAN-VER$ -->
			<exclusions>
				<exclusion>
					<groupId>io.netty</groupId>
					<artifactId>netty-transport</artifactId>
				</exclusion>
				<exclusion>
					<groupId>io.netty</groupId>
					<artifactId>netty-buffer</artifactId>
				</exclusion>
				<exclusion>
					<groupId>io.netty</groupId>
					<artifactId>netty-codec</artifactId>
				</exclusion>
				<exclusion>
					<groupId>io.netty</groupId>
					<artifactId>netty-common</artifactId>
				</exclusion>
				<exclusion>
					<groupId>io.netty</groupId>
					<artifactId>netty-handler</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>com.datastax.cassandra</groupId>
			<artifactId>cassandra-driver-mapping</artifactId>
			<version>${cassandra-version}</version><!--$NO-MVN-MAN-VER$ -->
		</dependency>

		<dependency>
			<groupId>com.datastax.cassandra</groupId>
			<artifactId>cassandra-driver-extras</artifactId>
			<version>${cassandra-version}</version>
		</dependency>

		<dependency>
			<groupId>net.scattersphere</groupId>
			<artifactId>scattersphere-core</artifactId>
			<version>0.0.3</version>
		</dependency>
		<!-- Cassandra Jar End -->

		<!-- Commons Http Client -->
		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpclient</artifactId>
		</dependency>

		<!-- EMail Jar Start -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-support</artifactId>
			<version>2.0.8</version>
			<exclusions>
				<exclusion>
					<groupId>javax.servlet</groupId>
					<artifactId>servlet-api</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>javax.mail</groupId>
			<artifactId>mail</artifactId>
			<version>1.4.7</version>
		</dependency>
		<!-- EMail Jar End -->

		<!-- Sonar Jar Start -->
		<dependency>
			<groupId>org.codehaus.sonar</groupId>
			<artifactId>sonar-maven-plugin</artifactId>
			<version>5.1</version>
			<type>maven-plugin</type>
		</dependency>
		<!-- Sonar Jar End -->

		<dependency>
			<groupId>org.hamcrest</groupId>
			<artifactId>hamcrest-all</artifactId>
			<version>1.3</version>
		</dependency>
		<dependency>
			<groupId>com.jayway.restassured</groupId>
			<artifactId>rest-assured</artifactId>
			<version>2.9.0</version>
		</dependency>

		<dependency>
			<groupId>ant-contrib</groupId>
			<artifactId>ant-contrib</artifactId>
			<version>1.0b3</version>
			<exclusions>
				<exclusion>
					<groupId>ant</groupId>
					<artifactId>ant</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>org.apache.ant</groupId>
			<artifactId>ant-nodeps</artifactId>
			<version>1.8.1</version>
		</dependency>

		<dependency>
			<groupId>org.jeasy</groupId>
			<artifactId>easy-rules-core</artifactId>
			<version>${easy.rules.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
		</dependency>
	</dependencies>
	<build>
		<plugins>
			<!-- Package as a war -->
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<finalName>optimiser</finalName>
				</configuration>
			</plugin>
		</plugins>
	</build>

	<profiles>
		<profile>
			<id>Xcordis</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<build>
				<resources>
					<resource>
						<directory>src/main/resources</directory>
					</resource>
				</resources>
				<plugins>

					<plugin>
						<artifactId>maven-eclipse-plugin</artifactId>
						<version>2.9</version><!--$NO-MVN-MAN-VER$ -->
						<configuration>
							<additionalProjectnatures>
								<projectnature>org.springframework.ide.eclipse.core.springnature</projectnature>
							</additionalProjectnatures>
							<additionalBuildcommands>
								<buildcommand>org.springframework.ide.eclipse.core.springbuilder</buildcommand>
							</additionalBuildcommands>
							<downloadSources>true</downloadSources>
							<downloadJavadocs>true</downloadJavadocs>
						</configuration>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-compiler-plugin</artifactId>
						<version>2.3.2</version><!--$NO-MVN-MAN-VER$ -->
						<configuration>
							<source>${java.version}</source>
							<target>${java.version}</target>
							<compilerArgument>-Xlint:all</compilerArgument>
							<showWarnings>true</showWarnings>
							<showDeprecation>true</showDeprecation>
						</configuration>
					</plugin>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>properties-maven-plugin</artifactId>
						<version>1.0-alpha-2</version>
						<executions>
							<execution>
								<phase>install</phase>
								<goals>
									<goal>read-project-properties</goal>
								</goals>
								<configuration>
									<files>
										<file>${project}/project.properties</file>
									</files>
								</configuration>
							</execution>
						</executions>
					</plugin>

					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-antrun-plugin</artifactId>
						<version>1.8</version><!-- $NO-MVN-MAN-VER$ -->
						<executions>
							<execution>
								<id>backup</id>
								<phase>install</phase>
								<goals>
									<goal>run</goal>
								</goals>
								<configuration>
									<target name="backup">
										<taskdef resource="net/sf/antcontrib/antlib.xml">
											<classpath>
												<pathelement location="${ANT_HOME}/lib/ant-contrib-1.0b3.jar" />
											</classpath>
										</taskdef>
										<tstamp>
											<format property="tstamped-file-name" pattern="MM-dd-yyyy_hhmmss_aa" />
										</tstamp>
										<echo>Backup start</echo>
										<if>
											<equals arg1="${env.backup}" arg2="true" />
											<then>
												<echo>${ANT_HOME}/lib/ant-contrib-1.0b3.jar</echo>
												<echo>Backup the war Start...</echo>
												<echo>Backup the war into ${war.backup.location}</echo>
												<copy
													todir="${war.backup.location}/optimiser/${tstamped-file-name}/">
													<fileset dir="target">
														<include name="optimiser.war" />
													</fileset>
												</copy>
												<echo>Backup the war Done...</echo>
											</then>
										</if>
										<echo>Backup end</echo>
									</target>
								</configuration>
							</execution>
							<execution>
								<id>copyresources</id>
								<phase>install</phase>
								<goals>
									<goal>run</goal>
								</goals>
								<configuration>
									<target name="copyresources">
										<copy todir="src/main/resources/" overwrite="true">
											<fileset dir="${project}" />
										</copy>
									</target>
								</configuration>
							</execution>
						</executions>
					</plugin> 
					<plugin>
						<groupId>org.apache.tomcat.maven</groupId>
						<artifactId>tomcat7-maven-plugin</artifactId>
						<version>2.2</version>
						<configuration>
							<url>${tomcat.manager.url}</url> <!-- This is defined at .m2\settings.xml under profiles -->
							<server>${tomcat.name}</server>
							<path>/${war.file.path}</path>
							<update>true</update>
							<tstamp>
								<format property="tstamped-file-name" pattern="MM-dd-yyyy_hhmmss_aa" />
							</tstamp>
							<tag>optimiser${tstamped-file-name}.war</tag>
						</configuration>
					</plugin>
					<plugin>
						<groupId>org.codehaus.sonar</groupId>
						<artifactId>sonar-maven-plugin</artifactId>
						<version>5.3</version>
					</plugin>
				</plugins>
				<finalName>optimiser</finalName>
			</build>
		</profile>
	</profiles>
</project>
